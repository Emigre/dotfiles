- name: Ensure the config folder exists and has the right permissions
  file: "path={{ home }}/.config state=directory mode=0755 owner={{ user }}"
  become: yes
  become_user: "{{ user }}"

- name: Ensure the vim repo is cloned
  git:
    repo: https://github.com/Emigre/vim.git
    version: master
    dest: "{{ home }}/vim"
    update: no
    accept_hostkey: yes

- name: Ensure the subfolders inside the vim configuration folder exist and have the right permissions
  file: "path={{ home }}/vim/{{ item }} state=directory mode=0755 owner={{ user }}"
  become: yes
  become_user: "{{ user }}"
  with_items:
    - backups
    - undo
    - swaps
    - plugged

- name: Ensure the .vim config folder is a symlink to the vim config folder
  file:
    src: "{{ home }}/vim"
    dest: "{{ home }}/.vim"
    state: link
  become: yes
  become_user: "{{ user }}"

- name: Ensure .vimrc is a symlink to init.vim
  file:
    src: "{{ home }}/vim/init.vim"
    dest: "{{ home }}/.vimrc"
    state: link
  become: yes
  become_user: "{{ user }}"

- name: Ensure the neovim config folder is a symlink to the vim config folder
  file:
    src: "{{ home }}/vim"
    dest: "{{ home }}/.config/nvim"
    state: link
  become: yes
  become_user: "{{ user }}"

- name: Ensure the coc config folder is a symlink to the coc config folder inside the vim repo
  file:
    src: "{{ home }}/vim/coc"
    dest: "{{ home }}/.config/coc"
    state: link
  become: yes
  become_user: "{{ user }}"

- name: Ensure the coc extensions folder exists and has the right permissions
  file: "path={{ home }}/.config/coc/extensions state=directory mode=0755 owner={{ user }}"
  become: yes
  become_user: "{{ user }}"

- name: Ensure the vim plugins are cloned in the plugged folder
  git:
    repo: "https://github.com/{{ item }}"
    version: master
    dest: "{{ home }}/.vim/plugged/{{ item | basename }}"
    update: no
    accept_hostkey: yes
  with_items:
    - airblade/vim-gitgutter
    - ap/vim-buftabline
    - bfrg/vim-cpp-modern
    - drmikehenry/vim-headerguard
    - editorconfig/editorconfig-vim
    - elzr/vim-json
    - fatih/vim-go
    - hashivim/vim-terraform
    - ianks/vim-tsx
    - jlanzarotta/bufexplorer
    - jparise/vim-graphql
    - junegunn/fzf.vim
    - keith/swift.vim
    - kien/ctrlp.vim
    - leafgarland/typescript-vim
    - liuchengxu/vista.vim
    - mxw/vim-jsx
    - neoclide/coc.nvim
    - pangloss/vim-javascript
    - plasticboy/vim-markdown
    - rhysd/vim-clang-format
    - scrooloose/nerdcommenter
    - scrooloose/nerdtree
    - svermeulen/vim-easyclip
    - tommcdo/vim-fugitive-blame-ext
    - tpope/vim-fugitive
    - tpope/vim-repeat
    - Vimjas/vim-python-pep8-indent
    - Yggdroot/indentLine

- name: Ensure node and yarn are present to be able to build coc.nvim from source if needed
  homebrew:
    name: ["{{ item }}"]
    state: present
  with_items:
    - node
    - yarn

- name: Ensure pkg is installed to be able to build coc.nvim from source if needed
  npm:
    name: pkg
    state: present
    global: yes

- name: Ensure the coc.nvim extensions are installed
  yarn:
    path: "{{ home }}/vim/plugged/coc.nvim/"
  changed_when: false

- name: Ensure the coc.nvim extensions are installed
  yarn:
    path: "{{ home }}/vim/coc/extensions/"
  changed_when: false

- name: Ensure vim is installed
  homebrew:
    name: vim
    state: present

- name: Ensure neovim is installed
  homebrew:
    name: nvim
    state: present
