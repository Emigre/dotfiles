- name: Ensure the .config folder exists and has the right permissions
  file: "path={{ home }}/.config state=directory mode=0755 owner={{ user }}"
  become: yes
  become_user: "{{ user }}"

- name: Ensure the dotfiles repo is cloned
  git:
    repo: https://github.com/Emigre/dotfiles.git
    version: master
    dest: "{{ home }}/dotfiles"
    update: no
    accept_hostkey: yes

- name: Symlink the dotfiles
  file:
    src: "{{ item }}"
    dest: "{{ home }}/{{ item | basename }}"
    state: link
  with_fileglob:
    - ".*"

- name: Ensure the scripts repo is cloned
  git:
    repo: https://github.com/Emigre/scripts.git
    version: master
    dest: "{{ home }}/scripts"
    update: no
    accept_hostkey: yes

- name: Ensure the code folder exists and has the right permissions
  file: "path={{ home }}/code state=directory mode=0755 owner={{ user }}"
  become: yes
  become_user: "{{ user }}"

- name: Ensure the subfolders inside code exist and have the right permissions
  file: "path={{ home }}/code/{{ item }} state=directory mode=0755 owner={{ user }}"
  become: yes
  become_user: "{{ user }}"
  with_items:
    - cpp
    - java
    - javascript
    - python

- name: Ensure the envs folder exists and has the right permissions
  file: "path={{ home }}/envs state=directory mode=0755 owner={{ user }}"
  become: yes
  become_user: "{{ user }}"

- name: Ensure there is a bash completions folder
  file: "path={{ home }}/.bash_completion.d state=directory mode=0755 owner={{ user }}"
  become: yes
  become_user: "{{ user }}"

- name: Symlink the completion scripts
  file:
    src: "{{ item }}"
    dest: "{{ home }}/.bash_completion.d/{{ item | basename }}"
    state: link
  with_fileglob:
    - "*_completion.bash"

- name: Ensure there is a .h_config file
  file: "path={{ home }}/.h_config state=touch mode=0644 owner={{ user }}"
  become: yes
  become_user: "{{ user }}"
  changed_when: false

- name: Set the .gituser file
  template:
    src: "gituser.j2"
    dest: "{{ home }}/.gituser"
    group: admin
    mode: 0664

- name: Ensure the Dropbox folder exists and has the right permissions
  file: "path={{ home }}/Dropbox state=directory mode=0755 owner={{ user }}"
  become: yes
  become_user: "{{ user }}"

- name: Ensure the Dropbox folder has a backups subfolder
  file: "path={{ home }}/Dropbox/backups state=directory mode=0755 owner={{ user }}"
  become: yes
  become_user: "{{ user }}"
